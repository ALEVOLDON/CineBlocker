import psutil
import time
import mido
import threading
from datetime import datetime, timedelta

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à –Ω–æ–≤—ã–π –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
import database
import site_blocker # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏

# –°–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ DAW, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Ö–æ—Ç–∏–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å.
# –ù–∞–∑–≤–∞–Ω–∏—è –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–µ—Ä—Å–∏–∏ –∏ –û–°.
# ‚ùóÔ∏è–í–ê–ñ–ù–û: –î–æ–±–∞–≤—å—Ç–µ —Å—é–¥–∞ –∏–º—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤–∞—à–µ–π DAW, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ.
# –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ find_processes.py, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ç–æ—á–Ω–æ–µ –∏–º—è.
# –í—Å–µ –∏–º–µ–Ω–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –ù–ò–ñ–ù–ï–ú –†–ï–ì–ò–°–¢–†–ï.
DAW_PROCESS_NAMES = [
    "ableton live 12 lite.exe", # <- –ü—Ä–∏–≤–µ–ª –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã
    "ableton live 11 suite.exe",
    "fl64.exe",
    "bitwigstudio.exe",
    "reaper.exe",
    "studio one.exe",
]

IDLE_THRESHOLD_SECONDS = 60  # –ü–æ—Ä–æ–≥ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
TARGET_SECONDS_PER_DAY = 30 * 60 # –¶–µ–ª—å –Ω–∞ –¥–µ–Ω—å: 30 –º–∏–Ω—É—Ç
LOOP_INTERVAL = 5 # –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

def is_daw_running():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω –ª–∏ –∫–∞–∫–æ–π-–ª–∏–±–æ –∏–∑ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö DAW-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è –ø—Ä–æ—Ü–µ—Å—Å–∞, –µ—Å–ª–∏ –æ–Ω –Ω–∞–π–¥–µ–Ω, –∏–Ω–∞—á–µ None.
    """
    for proc in psutil.process_iter(['name']):
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        if proc.info['name'].lower() in DAW_PROCESS_NAMES:
            return proc.info['name'] # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è –¥–ª—è –≤—ã–≤–æ–¥–∞
    return None

def monitor_midi_activity(stop_event, last_midi_activity_ref):
    """
    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —Å–ª—É—à–∞–µ—Ç MIDI-—Å–æ–±—ã—Ç–∏—è
    –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.
    """
    try:
        # mido.open_input() –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –ø–æ—Ä—Ç
        with mido.open_input() as port:
            print(f"üéß –°–ª—É—à–∞–µ–º MIDI-–ø–æ—Ä—Ç: {port.name}")
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è, —á—Ç–æ–±—ã —Å–µ—Å—Å–∏—è —Å—Ä–∞–∑—É —Å—á–∏—Ç–∞–ª–∞—Å—å –∞–∫—Ç–∏–≤–Ω–æ–π
            last_midi_activity_ref[0] = datetime.now()
            
            while not stop_event.is_set():
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
                if port.poll():
                    last_midi_activity_ref[0] = datetime.now()
                time.sleep(0.1) # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞, —á—Ç–æ–±—ã –Ω–µ –≥—Ä—É–∑–∏—Ç—å CPU

    except (IOError, OSError):
        print("‚ö†Ô∏è MIDI-—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ —Ñ–∞–∫—Ç—É –∑–∞–ø—É—Å–∫–∞ DAW.")
        # –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –º—ã –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è, –ø–æ–∫–∞ DAW –æ—Ç–∫—Ä—ã—Ç
        while not stop_event.is_set():
             last_midi_activity_ref[0] = datetime.now()
             time.sleep(1)

class CineBlockerTracker:
    def __init__(self):
        # --- –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ç—Ä–µ–∫–µ—Ä–∞ ---
        self.total_today_seconds = 0
        self.session_active = False
        self.sites_are_blocked = None
        self.is_idle = False
        self.daw_process_name = None
        self.status_text = "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è..."
        self.time_text = "00:00 / 30:00"

        # --- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–∞–º–∏ ---
        self.last_midi_activity = [None] # –í —Å–ø–∏—Å–∫–µ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –ø–æ —Å—Å—ã–ª–∫–µ
        self.midi_thread = None
        self.stop_midi_thread_event = threading.Event()
        self._stop_main_loop_event = threading.Event()

    def _update_time_text(self):
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è GUI."""
        done_mins, done_secs = divmod(self.total_today_seconds, 60)
        target_mins, _ = divmod(TARGET_SECONDS_PER_DAY, 60)
        self.time_text = f"{done_mins:02d}:{done_secs:02d} / {target_mins:02d}:00"

    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Ç—Ä–µ–∫–µ—Ä–∞. –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ."""
        print("üöÄ –¢—Ä–µ–∫–µ—Ä –∑–∞–ø—É—â–µ–Ω...")
        database.init_db()
        self.total_today_seconds = database.get_today_activity()
        self._update_time_text()

        # –ù–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        if self.total_today_seconds < TARGET_SECONDS_PER_DAY:
            self.sites_are_blocked = site_blocker.block_sites()
        else:
            if site_blocker.unblock_sites():
                self.sites_are_blocked = False

        while not self._stop_main_loop_event.is_set():
            running_daw = is_daw_running()

            if running_daw and not self.session_active:
                # –ù–∞—á–∞–ª–æ —Å–µ—Å—Å–∏–∏
                self.session_active = True
                self.daw_process_name = running_daw
                self.status_text = f"‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω DAW: {self.daw_process_name}"
                self.stop_midi_thread_event.clear()
                self.midi_thread = threading.Thread(
                    target=monitor_midi_activity,
                    args=(self.stop_midi_thread_event, self.last_midi_activity),
                    daemon=True
                )
                self.midi_thread.start()

            elif running_daw and self.session_active:
                # –°–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞
                self.is_idle = self.last_midi_activity[0] and \
                               (datetime.now() - self.last_midi_activity[0]) > timedelta(seconds=IDLE_THRESHOLD_SECONDS)

                if self.is_idle:
                    self.status_text = "üò¥ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω, —Ç–∞–π–º–µ—Ä –Ω–∞ –ø–∞—É–∑–µ..."
                else:
                    self.status_text = "üé∂ –°–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞, –≤—Ä–µ–º—è –∏–¥–µ—Ç!"
                    self.total_today_seconds += LOOP_INTERVAL
                    self._update_time_text()

                    if self.sites_are_blocked and self.total_today_seconds >= TARGET_SECONDS_PER_DAY:
                        print("\nüéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞!")
                        database.save_today_activity(self.total_today_seconds)
                        if site_blocker.unblock_sites():
                            self.sites_are_blocked = False
                        self.status_text = f"‚úÖ –¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞! –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –æ—Ç–¥—ã—Ö–æ–º."

            elif not running_daw and self.session_active:
                # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏
                self.status_text = "üõë DAW –∑–∞–∫—Ä—ã—Ç. –°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
                database.save_today_activity(self.total_today_seconds)
                self.session_active = False
                self.stop_midi_thread_event.set()
                if self.midi_thread:
                    self.midi_thread.join()
                self.last_midi_activity[0] = None
            else:
                # –û–∂–∏–¥–∞–Ω–∏–µ
                if self.total_today_seconds < TARGET_SECONDS_PER_DAY:
                    self.status_text = "...–û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ DAW. –°–∞–π—Ç—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã."
                else:
                    self.status_text = "...–û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ DAW. –¶–µ–ª—å –Ω–∞ –¥–µ–Ω—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞."

            time.sleep(LOOP_INTERVAL)

        self._shutdown()

    def stop(self):
        """–°–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–º—É —Ü–∏–∫–ª—É –∏ –ø–æ—Ç–æ–∫–∞–º –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è."""
        print("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫—É —Ç—Ä–µ–∫–µ—Ä–∞...")
        self._stop_main_loop_event.set()
        self.stop_midi_thread_event.set()

    def _shutdown(self):
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç —á–∏—Å—Ç–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã: —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ, —Å–Ω–∏–º–∞–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É."""
        print("–¢—Ä–µ–∫–µ—Ä –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ...")
        database.save_today_activity(self.total_today_seconds)
        if self.sites_are_blocked:
            print("–°–Ω–∏–º–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å–∞–π—Ç–æ–≤ –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º...")
            site_blocker.unblock_sites()
        if self.midi_thread and self.midi_thread.is_alive():
            self.midi_thread.join()
        print("üëã –¢—Ä–µ–∫–µ—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")